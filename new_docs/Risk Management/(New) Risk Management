CHANGES IN SOFTWARE
After an appropriate project proposal and workload assigned; technologies to be used were selected. Change of software development approaches risk can either be offered by the developers,what is 'dev team sourced'(a); or forced by the owner of the technology, what is 'outsourced'(b).
The technology that is being used may not be enough satisfy developers' desires. Technologies that have disadventages and cause limitations are offered to change by developers. As for the software factor; the technology with changes -a big update in Java, MySQL or Connector Libraries in our case- may affect the software. The effect is proportional to the changes made in the areas of the technology that are being used in the project. Small effects would be compatibility problems. Yet, we have stated that the customers are going to use the software in their PCs without encountering any compatibility problem.
a) Changing the Software Used; Using a New Software (Dev Team sourced risk)
Foreseeing this risk caused by developers is though; as the technologies used were selected by the same Dev Team. In other words; if the Dev Team needs a change in technologies, this will be the result of bad experience with the technology right in this project. The technology that is subjected to change may/will affect the project depending on how far is the project developed, and the number of dependencies used the technology yet. This is a risk that affects project crucially. Team SWAT-KATS are prepared for this risk. Technologies were studied well before the start of development and some technologies changed (such as FTP). Brainstorming sessions and team meetings were handy lowering the impact and the probability of happening of this risk. The risk will have an impact on project as the project is developed in parallel, each part is dependent to one another; yet SWAT-KATS have managed to lower the probability.
b) Changes in Used Softwares (Outsourced risk)
This outsourced risks means, any changes or updates in the technologies that are being used may affect the project. This risk is only dependent to the owners of the technology. This type of risks are not meant to happen in this project's timeline; as the project is planned to finish around 2 months and no crucial changes expected in the technologies that are used. As stated before; Java is being used in this project and any changes in Java (by Oracle) have the probability to affect the project even though it is an "improvement". Technology-sourced risks have minor effects in this project as it can be fixed quickly. The possibility of happening is low. So, this risks is not considered as a "dangerous" risk nor "likely to happen".

Although we have lowered the probability, a few was encountered. We have been successful to manage this type of events throughout the project in a state what has too small effect to be stated as a risk.

CHANGE OF CUSTOMER DESIRES
Software projects are subject to change in anytime. A good software is improvable. The project is being planned and developed with fully understanding of that statements; yet, change of customer's desires stands as a problem. These changes affects project plan and the project structure. Analysing customer's needs is crucial for avoiding this risk. It is hard to foresee the impact of this risk to the project but it can be stated that it will affect the project. Misunderstanding and/or miscommunication between client and the team leads to this problem. SWAT-KATS analysed the user needs and proposed improvements -as additional functions. The project structure is rigid at this moment. All pros and cons and limits of technologies were discussed, and then comes the rigid structure.
This risk is not likely to happen, and if it happens; the impact won't be crucial because of the maturity of the structure. By "rigid", it doesn't mean it is not "changeable" but many scenarios have been thought of. Thus, this risk is not considered as a "dangerous" risk.

DATABASE CHANGES
The project is developed in parallel, following the work plan with respect to the workload assigned. Database has a crucial part. Database needs to represent all information in an efficient way. A not well-structured database still can do its part, but difficulties will occur in all other areas as database is dependent to every other area, vice versa. Changes in database will affect whole project in different ways. It may improve or worsen the differents areas, but it is easily seen that; changes in database will lead to changes in project which means it will cost time. Its cost is only time in a good scenario, on the other hand; it may have a huge impact on project.
This risk is being handled with brainstorming sessions and team meetings where every member can state their thoughts. The database structure is decided and it is not very likely to change as it contains point of view of every member. Database changes may or may not be crucial, but we have trust in the project structure.